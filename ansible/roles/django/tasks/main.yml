---

- name: Install Python 3
  apt:
    name: python3
    update_cache: true

- name: install pip3
  apt:
    name: python3-pip

- name: install python3-venv
  apt:
    name: python3-venv

- name: install setuptools
  apt:
    name: python-setuptools

- name: Install requirements
  pip:
    requirements: "{{django_requirements_file}}"
    virtualenv: "{{django_virtual_env_path}}"
    virtualenv_command: "/usr/bin/python{{python_major_version}} -m venv"
  when:
    - django_requirements_file is defined
    - django_requirements_file != none

- name: Create Postgres Django User
  become: yes
  become_user: postgres
  postgresql_user:
    name: "{{django_databases.default.user}}"
    password: "{{django_databases.default.password}}"
    encrypted: yes
    role_attr_flags: SUPERUSER # needed to create test database
  tags:
    - django

- name: Setup django database
  become: yes
  become_user: postgres
  postgresql_db:
    name: "{{django_databases.default.name}}"
    encoding: UTF-8
    owner: "{{django_databases.default.user}}"
    state: present
  tags:
    - django

- name: generate secret key
  shell: ". {{django_virtual_env_path}}/bin/activate && python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'"
  register: secret_key
  tags:
    - django

- name: setup django settings
  template:
    src: templates/local_settings.j2
    dest: "{{django_local_settings_file}}"
    force: no

- name: restart apache
  service:
    name: apache2
    state: restarted
    enabled: yes
  when: restart_apache == true
...
